
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

__kubeadm_bash_source() {
	alias shopt=':'
	alias _expand=_bash_expand
	alias _complete=_bash_comp
	emulate -L sh
	setopt kshglob noshglob braceexpand

	source "$@"
}

__kubeadm_type() {
	# -t is not supported by zsh
	if [ "$1" == "-t" ]; then
		shift

		# fake Bash 4 to disable "complete -o nospace". Instead
		# "compopt +-o nospace" is used in the code to toggle trailing
		# spaces. We don't support that, but leave trailing spaces on
		# all the time
		if [ "$1" = "__kubeadm_compopt" ]; then
			echo builtin
			return 0
		fi
	fi
	type "$@"
}

__kubeadm_compgen() {
	local completions w
	completions=( $(compgen "$@") ) || return $?

	# filter by given word as prefix
	while [[ "$1" = -* && "$1" != -- ]]; do
		shift
		shift
	done
	if [[ "$1" == -- ]]; then
		shift
	fi
	for w in "${completions[@]}"; do
		if [[ "${w}" = "$1"* ]]; then
			echo "${w}"
		fi
	done
}

__kubeadm_compopt() {
	true # don't do anything. Not supported by bashcompinit in zsh
}

__kubeadm_ltrim_colon_completions()
{
	if [[ "$1" == *:* && "$COMP_WORDBREAKS" == *:* ]]; then
		# Remove colon-word prefix from COMPREPLY items
		local colon_word=${1%${1##*:}}
		local i=${#COMPREPLY[*]}
		while [[ $((--i)) -ge 0 ]]; do
			COMPREPLY[$i]=${COMPREPLY[$i]#"$colon_word"}
		done
	fi
}

__kubeadm_get_comp_words_by_ref() {
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[${COMP_CWORD}-1]}"
	words=("${COMP_WORDS[@]}")
	cword=("${COMP_CWORD[@]}")
}

__kubeadm_filedir() {
	local RET OLD_IFS w qw

	__kubectl_debug "_filedir $@ cur=$cur"
	if [[ "$1" = \~* ]]; then
		# somehow does not work. Maybe, zsh does not call this at all
		eval echo "$1"
		return 0
	fi

	OLD_IFS="$IFS"
	IFS=$'\n'
	if [ "$1" = "-d" ]; then
		shift
		RET=( $(compgen -d) )
	else
		RET=( $(compgen -f) )
	fi
	IFS="$OLD_IFS"

	IFS="," __kubectl_debug "RET=${RET[@]} len=${#RET[@]}"

	for w in ${RET[@]}; do
		if [[ ! "${w}" = "${cur}"* ]]; then
			continue
		fi
		if eval "[[ \"\${w}\" = *.$1 || -d \"\${w}\" ]]"; then
			qw="$(__kubeadm_quote "${w}")"
			if [ -d "${w}" ]; then
				COMPREPLY+=("${qw}/")
			else
				COMPREPLY+=("${qw}")
			fi
		fi
	done
}

__kubeadm_quote() {
    if [[ $1 == \'* || $1 == \"* ]]; then
        # Leave out first character
        printf %q "${1:1}"
    else
    	printf %q "$1"
    fi
}

autoload -U +X bashcompinit && bashcompinit

# use word boundary patterns for BSD or GNU sed
LWORD='[[:<:]]'
RWORD='[[:>:]]'
if sed --help 2>&1 | grep -q GNU; then
	LWORD='\<'
	RWORD='\>'
fi

__kubeadm_convert_bash_to_zsh() {
	sed \
	-e 's/declare -F/whence -w/' \
	-e 's/local \([a-zA-Z0-9_]*\)=/local \1; \1=/' \
	-e 's/flags+=("\(--.*\)=")/flags+=("\1"); two_word_flags+=("\1")/' \
	-e 's/must_have_one_flag+=("\(--.*\)=")/must_have_one_flag+=("\1")/' \
	-e "s/${LWORD}_filedir${RWORD}/__kubeadm_filedir/g" \
	-e "s/${LWORD}_get_comp_words_by_ref${RWORD}/__kubeadm_get_comp_words_by_ref/g" \
	-e "s/${LWORD}__ltrim_colon_completions${RWORD}/__kubeadm_ltrim_colon_completions/g" \
	-e "s/${LWORD}compgen${RWORD}/__kubeadm_compgen/g" \
	-e "s/${LWORD}compopt${RWORD}/__kubeadm_compopt/g" \
	-e "s/${LWORD}declare${RWORD}/builtin declare/g" \
	-e "s/\\\$(type${RWORD}/\$(__kubeadm_type/g" \
	<<'BASH_COMPLETION_EOF'
# bash completion for kubeadm                              -*- shell-script -*-

__kubeadm_debug()
{
    if [[ -n ${BASH_COMP_DEBUG_FILE} ]]; then
        echo "$*" >> "${BASH_COMP_DEBUG_FILE}"
    fi
}

# Homebrew on Macs have version 1.3 of bash-completion which doesn't include
# _init_completion. This is a very minimal version of that function.
__kubeadm_init_completion()
{
    COMPREPLY=()
    _get_comp_words_by_ref "$@" cur prev words cword
}

__kubeadm_index_of_word()
{
    local w word=$1
    shift
    index=0
    for w in "$@"; do
        [[ $w = "$word" ]] && return
        index=$((index+1))
    done
    index=-1
}

__kubeadm_contains_word()
{
    local w word=$1; shift
    for w in "$@"; do
        [[ $w = "$word" ]] && return
    done
    return 1
}

__kubeadm_handle_reply()
{
    __kubeadm_debug "${FUNCNAME[0]}"
    case $cur in
        -*)
            if [[ $(type -t compopt) = "builtin" ]]; then
                compopt -o nospace
            fi
            local allflags
            if [ ${#must_have_one_flag[@]} -ne 0 ]; then
                allflags=("${must_have_one_flag[@]}")
            else
                allflags=("${flags[*]} ${two_word_flags[*]}")
            fi
            COMPREPLY=( $(compgen -W "${allflags[*]}" -- "$cur") )
            if [[ $(type -t compopt) = "builtin" ]]; then
                [[ "${COMPREPLY[0]}" == *= ]] || compopt +o nospace
            fi

            # complete after --flag=abc
            if [[ $cur == *=* ]]; then
                if [[ $(type -t compopt) = "builtin" ]]; then
                    compopt +o nospace
                fi

                local index flag
                flag="${cur%=*}"
                __kubeadm_index_of_word "${flag}" "${flags_with_completion[@]}"
                COMPREPLY=()
                if [[ ${index} -ge 0 ]]; then
                    PREFIX=""
                    cur="${cur#*=}"
                    ${flags_completion[${index}]}
                    if [ -n "${ZSH_VERSION}" ]; then
                        # zsh completion needs --flag= prefix
                        eval "COMPREPLY=( \"\${COMPREPLY[@]/#/${flag}=}\" )"
                    fi
                fi
            fi
            return 0;
            ;;
    esac

    # check if we are handling a flag with special work handling
    local index
    __kubeadm_index_of_word "${prev}" "${flags_with_completion[@]}"
    if [[ ${index} -ge 0 ]]; then
        ${flags_completion[${index}]}
        return
    fi

    # we are parsing a flag and don't have a special handler, no completion
    if [[ ${cur} != "${words[cword]}" ]]; then
        return
    fi

    local completions
    completions=("${commands[@]}")
    if [[ ${#must_have_one_noun[@]} -ne 0 ]]; then
        completions=("${must_have_one_noun[@]}")
    fi
    if [[ ${#must_have_one_flag[@]} -ne 0 ]]; then
        completions+=("${must_have_one_flag[@]}")
    fi
    COMPREPLY=( $(compgen -W "${completions[*]}" -- "$cur") )

    if [[ ${#COMPREPLY[@]} -eq 0 && ${#noun_aliases[@]} -gt 0 && ${#must_have_one_noun[@]} -ne 0 ]]; then
        COMPREPLY=( $(compgen -W "${noun_aliases[*]}" -- "$cur") )
    fi

    if [[ ${#COMPREPLY[@]} -eq 0 ]]; then
        declare -F __custom_func >/dev/null && __custom_func
    fi

    # available in bash-completion >= 2, not always present on macOS
    if declare -F __ltrim_colon_completions >/dev/null; then
        __ltrim_colon_completions "$cur"
    fi

    # If there is only 1 completion and it is a flag with an = it will be completed
    # but we don't want a space after the =
    if [[ "${#COMPREPLY[@]}" -eq "1" ]] && [[ $(type -t compopt) = "builtin" ]] && [[ "${COMPREPLY[0]}" == --*= ]]; then
       compopt -o nospace
    fi
}

# The arguments should be in the form "ext1|ext2|extn"
__kubeadm_handle_filename_extension_flag()
{
    local ext="$1"
    _filedir "@(${ext})"
}

__kubeadm_handle_subdirs_in_dir_flag()
{
    local dir="$1"
    pushd "${dir}" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1
}

__kubeadm_handle_flag()
{
    __kubeadm_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    # if a command required a flag, and we found it, unset must_have_one_flag()
    local flagname=${words[c]}
    local flagvalue
    # if the word contained an =
    if [[ ${words[c]} == *"="* ]]; then
        flagvalue=${flagname#*=} # take in as flagvalue after the =
        flagname=${flagname%=*} # strip everything after the =
        flagname="${flagname}=" # but put the = back
    fi
    __kubeadm_debug "${FUNCNAME[0]}: looking for ${flagname}"
    if __kubeadm_contains_word "${flagname}" "${must_have_one_flag[@]}"; then
        must_have_one_flag=()
    fi

    # if you set a flag which only applies to this command, don't show subcommands
    if __kubeadm_contains_word "${flagname}" "${local_nonpersistent_flags[@]}"; then
      commands=()
    fi

    # keep flag value with flagname as flaghash
    # flaghash variable is an associative array which is only supported in bash > 3.
    if [[ -z "${BASH_VERSION}" || "${BASH_VERSINFO[0]}" -gt 3 ]]; then
        if [ -n "${flagvalue}" ] ; then
            flaghash[${flagname}]=${flagvalue}
        elif [ -n "${words[ $((c+1)) ]}" ] ; then
            flaghash[${flagname}]=${words[ $((c+1)) ]}
        else
            flaghash[${flagname}]="true" # pad "true" for bool flag
        fi
    fi

    # skip the argument to a two word flag
    if __kubeadm_contains_word "${words[c]}" "${two_word_flags[@]}"; then
        c=$((c+1))
        # if we are looking for a flags value, don't show commands
        if [[ $c -eq $cword ]]; then
            commands=()
        fi
    fi

    c=$((c+1))

}

__kubeadm_handle_noun()
{
    __kubeadm_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    if __kubeadm_contains_word "${words[c]}" "${must_have_one_noun[@]}"; then
        must_have_one_noun=()
    elif __kubeadm_contains_word "${words[c]}" "${noun_aliases[@]}"; then
        must_have_one_noun=()
    fi

    nouns+=("${words[c]}")
    c=$((c+1))
}

__kubeadm_handle_command()
{
    __kubeadm_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    local next_command
    if [[ -n ${last_command} ]]; then
        next_command="_${last_command}_${words[c]//:/__}"
    else
        if [[ $c -eq 0 ]]; then
            next_command="_kubeadm_root_command"
        else
            next_command="_${words[c]//:/__}"
        fi
    fi
    c=$((c+1))
    __kubeadm_debug "${FUNCNAME[0]}: looking for ${next_command}"
    declare -F "$next_command" >/dev/null && $next_command
}

__kubeadm_handle_word()
{
    if [[ $c -ge $cword ]]; then
        __kubeadm_handle_reply
        return
    fi
    __kubeadm_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"
    if [[ "${words[c]}" == -* ]]; then
        __kubeadm_handle_flag
    elif __kubeadm_contains_word "${words[c]}" "${commands[@]}"; then
        __kubeadm_handle_command
    elif [[ $c -eq 0 ]]; then
        __kubeadm_handle_command
    else
        __kubeadm_handle_noun
    fi
    __kubeadm_handle_word
}

_kubeadm_alpha_certs_renew_all()
{
    last_command="kubeadm_alpha_certs_renew_all"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--use-api")
    local_nonpersistent_flags+=("--use-api")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs_renew_apiserver()
{
    last_command="kubeadm_alpha_certs_renew_apiserver"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--use-api")
    local_nonpersistent_flags+=("--use-api")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs_renew_apiserver-etcd-client()
{
    last_command="kubeadm_alpha_certs_renew_apiserver-etcd-client"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--use-api")
    local_nonpersistent_flags+=("--use-api")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs_renew_apiserver-kubelet-client()
{
    last_command="kubeadm_alpha_certs_renew_apiserver-kubelet-client"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--use-api")
    local_nonpersistent_flags+=("--use-api")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs_renew_etcd-healthcheck-client()
{
    last_command="kubeadm_alpha_certs_renew_etcd-healthcheck-client"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--use-api")
    local_nonpersistent_flags+=("--use-api")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs_renew_etcd-peer()
{
    last_command="kubeadm_alpha_certs_renew_etcd-peer"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--use-api")
    local_nonpersistent_flags+=("--use-api")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs_renew_etcd-server()
{
    last_command="kubeadm_alpha_certs_renew_etcd-server"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--use-api")
    local_nonpersistent_flags+=("--use-api")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs_renew_front-proxy-client()
{
    last_command="kubeadm_alpha_certs_renew_front-proxy-client"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--use-api")
    local_nonpersistent_flags+=("--use-api")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs_renew()
{
    last_command="kubeadm_alpha_certs_renew"
    commands=()
    commands+=("all")
    commands+=("apiserver")
    commands+=("apiserver-etcd-client")
    commands+=("apiserver-kubelet-client")
    commands+=("etcd-healthcheck-client")
    commands+=("etcd-peer")
    commands+=("etcd-server")
    commands+=("front-proxy-client")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_certs()
{
    last_command="kubeadm_alpha_certs"
    commands=()
    commands+=("renew")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_kubeconfig_user()
{
    last_command="kubeadm_alpha_kubeconfig_user"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--client-name=")
    local_nonpersistent_flags+=("--client-name=")
    flags+=("--org=")
    local_nonpersistent_flags+=("--org=")
    flags+=("--token=")
    local_nonpersistent_flags+=("--token=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_kubeconfig()
{
    last_command="kubeadm_alpha_kubeconfig"
    commands=()
    commands+=("user")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_kubelet_config_download()
{
    last_command="kubeadm_alpha_kubelet_config_download"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubelet-version=")
    local_nonpersistent_flags+=("--kubelet-version=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_kubelet_config_enable-dynamic()
{
    last_command="kubeadm_alpha_kubelet_config_enable-dynamic"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubelet-version=")
    local_nonpersistent_flags+=("--kubelet-version=")
    flags+=("--node-name=")
    local_nonpersistent_flags+=("--node-name=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_kubelet_config()
{
    last_command="kubeadm_alpha_kubelet_config"
    commands=()
    commands+=("download")
    commands+=("enable-dynamic")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_kubelet()
{
    last_command="kubeadm_alpha_kubelet"
    commands=()
    commands+=("config")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_preflight_node()
{
    last_command="kubeadm_alpha_preflight_node"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    flags+=("--ignore-preflight-errors=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_preflight()
{
    last_command="kubeadm_alpha_preflight"
    commands=()
    commands+=("node")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_selfhosting_pivot()
{
    last_command="kubeadm_alpha_selfhosting_pivot"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--force")
    flags+=("-f")
    local_nonpersistent_flags+=("--force")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--store-certs-in-secrets")
    flags+=("-s")
    local_nonpersistent_flags+=("--store-certs-in-secrets")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha_selfhosting()
{
    last_command="kubeadm_alpha_selfhosting"
    commands=()
    commands+=("pivot")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_alpha()
{
    last_command="kubeadm_alpha"
    commands=()
    commands+=("certs")
    commands+=("kubeconfig")
    commands+=("kubelet")
    commands+=("preflight")
    commands+=("selfhosting")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_completion()
{
    last_command="kubeadm_completion"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--help")
    flags+=("-h")
    local_nonpersistent_flags+=("--help")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    must_have_one_noun+=("bash")
    must_have_one_noun+=("zsh")
    noun_aliases=()
}

_kubeadm_config_images_list()
{
    last_command="kubeadm_config_images_list"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    flags+=("--feature-gates=")
    flags+=("--kubernetes-version=")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_images_pull()
{
    last_command="kubeadm_config_images_pull"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    flags+=("--cri-socket=")
    flags+=("--feature-gates=")
    flags+=("--kubernetes-version=")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_images()
{
    last_command="kubeadm_config_images"
    commands=()
    commands+=("list")
    commands+=("pull")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_migrate()
{
    last_command="kubeadm_config_migrate"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--new-config=")
    local_nonpersistent_flags+=("--new-config=")
    flags+=("--old-config=")
    local_nonpersistent_flags+=("--old-config=")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_print_init-defaults()
{
    last_command="kubeadm_config_print_init-defaults"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--component-configs=")
    local_nonpersistent_flags+=("--component-configs=")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_print_join-defaults()
{
    last_command="kubeadm_config_print_join-defaults"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--component-configs=")
    local_nonpersistent_flags+=("--component-configs=")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_print()
{
    last_command="kubeadm_config_print"
    commands=()
    commands+=("init-defaults")
    commands+=("join-defaults")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_upload_from-file()
{
    last_command="kubeadm_config_upload_from-file"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_upload_from-flags()
{
    last_command="kubeadm_config_upload_from-flags"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    flags+=("--apiserver-cert-extra-sans=")
    flags+=("--cert-dir=")
    flags+=("--cri-socket=")
    flags+=("--feature-gates=")
    flags+=("--kubernetes-version=")
    flags+=("--node-name=")
    flags+=("--pod-network-cidr=")
    flags+=("--service-cidr=")
    flags+=("--service-dns-domain=")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_upload()
{
    last_command="kubeadm_config_upload"
    commands=()
    commands+=("from-file")
    commands+=("from-flags")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config_view()
{
    last_command="kubeadm_config_view"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_config()
{
    last_command="kubeadm_config"
    commands=()
    commands+=("images")
    commands+=("migrate")
    commands+=("print")
    commands+=("upload")
    commands+=("view")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_addon_all()
{
    last_command="kubeadm_init_phase_addon_all"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubernetes-version=")
    local_nonpersistent_flags+=("--kubernetes-version=")
    flags+=("--pod-network-cidr=")
    local_nonpersistent_flags+=("--pod-network-cidr=")
    flags+=("--service-cidr=")
    local_nonpersistent_flags+=("--service-cidr=")
    flags+=("--service-dns-domain=")
    local_nonpersistent_flags+=("--service-dns-domain=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_addon_coredns()
{
    last_command="kubeadm_init_phase_addon_coredns"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubernetes-version=")
    local_nonpersistent_flags+=("--kubernetes-version=")
    flags+=("--service-cidr=")
    local_nonpersistent_flags+=("--service-cidr=")
    flags+=("--service-dns-domain=")
    local_nonpersistent_flags+=("--service-dns-domain=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_addon_kube-proxy()
{
    last_command="kubeadm_init_phase_addon_kube-proxy"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubernetes-version=")
    local_nonpersistent_flags+=("--kubernetes-version=")
    flags+=("--pod-network-cidr=")
    local_nonpersistent_flags+=("--pod-network-cidr=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_addon()
{
    last_command="kubeadm_init_phase_addon"
    commands=()
    commands+=("all")
    commands+=("coredns")
    commands+=("kube-proxy")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_bootstrap-token()
{
    last_command="kubeadm_init_phase_bootstrap-token"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--skip-token-print")
    local_nonpersistent_flags+=("--skip-token-print")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_all()
{
    last_command="kubeadm_init_phase_certs_all"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-cert-extra-sans=")
    local_nonpersistent_flags+=("--apiserver-cert-extra-sans=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--service-cidr=")
    local_nonpersistent_flags+=("--service-cidr=")
    flags+=("--service-dns-domain=")
    local_nonpersistent_flags+=("--service-dns-domain=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_apiserver()
{
    last_command="kubeadm_init_phase_certs_apiserver"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-cert-extra-sans=")
    local_nonpersistent_flags+=("--apiserver-cert-extra-sans=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--service-cidr=")
    local_nonpersistent_flags+=("--service-cidr=")
    flags+=("--service-dns-domain=")
    local_nonpersistent_flags+=("--service-dns-domain=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_apiserver-etcd-client()
{
    last_command="kubeadm_init_phase_certs_apiserver-etcd-client"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_apiserver-kubelet-client()
{
    last_command="kubeadm_init_phase_certs_apiserver-kubelet-client"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_ca()
{
    last_command="kubeadm_init_phase_certs_ca"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_etcd-ca()
{
    last_command="kubeadm_init_phase_certs_etcd-ca"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_etcd-healthcheck-client()
{
    last_command="kubeadm_init_phase_certs_etcd-healthcheck-client"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_etcd-peer()
{
    last_command="kubeadm_init_phase_certs_etcd-peer"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_etcd-server()
{
    last_command="kubeadm_init_phase_certs_etcd-server"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_front-proxy-ca()
{
    last_command="kubeadm_init_phase_certs_front-proxy-ca"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_front-proxy-client()
{
    last_command="kubeadm_init_phase_certs_front-proxy-client"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--csr-dir=")
    local_nonpersistent_flags+=("--csr-dir=")
    flags+=("--csr-only")
    local_nonpersistent_flags+=("--csr-only")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs_sa()
{
    last_command="kubeadm_init_phase_certs_sa"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_certs()
{
    last_command="kubeadm_init_phase_certs"
    commands=()
    commands+=("all")
    commands+=("apiserver")
    commands+=("apiserver-etcd-client")
    commands+=("apiserver-kubelet-client")
    commands+=("ca")
    commands+=("etcd-ca")
    commands+=("etcd-healthcheck-client")
    commands+=("etcd-peer")
    commands+=("etcd-server")
    commands+=("front-proxy-ca")
    commands+=("front-proxy-client")
    commands+=("sa")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_control-plane_all()
{
    last_command="kubeadm_init_phase_control-plane_all"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--apiserver-extra-args=")
    local_nonpersistent_flags+=("--apiserver-extra-args=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--controller-manager-extra-args=")
    local_nonpersistent_flags+=("--controller-manager-extra-args=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--kubernetes-version=")
    local_nonpersistent_flags+=("--kubernetes-version=")
    flags+=("--pod-network-cidr=")
    local_nonpersistent_flags+=("--pod-network-cidr=")
    flags+=("--scheduler-extra-args=")
    local_nonpersistent_flags+=("--scheduler-extra-args=")
    flags+=("--service-cidr=")
    local_nonpersistent_flags+=("--service-cidr=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_control-plane_apiserver()
{
    last_command="kubeadm_init_phase_control-plane_apiserver"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--apiserver-extra-args=")
    local_nonpersistent_flags+=("--apiserver-extra-args=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--kubernetes-version=")
    local_nonpersistent_flags+=("--kubernetes-version=")
    flags+=("--service-cidr=")
    local_nonpersistent_flags+=("--service-cidr=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_control-plane_controller-manager()
{
    last_command="kubeadm_init_phase_control-plane_controller-manager"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--controller-manager-extra-args=")
    local_nonpersistent_flags+=("--controller-manager-extra-args=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--kubernetes-version=")
    local_nonpersistent_flags+=("--kubernetes-version=")
    flags+=("--pod-network-cidr=")
    local_nonpersistent_flags+=("--pod-network-cidr=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_control-plane_scheduler()
{
    last_command="kubeadm_init_phase_control-plane_scheduler"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--kubernetes-version=")
    local_nonpersistent_flags+=("--kubernetes-version=")
    flags+=("--scheduler-extra-args=")
    local_nonpersistent_flags+=("--scheduler-extra-args=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_control-plane()
{
    last_command="kubeadm_init_phase_control-plane"
    commands=()
    commands+=("all")
    commands+=("apiserver")
    commands+=("controller-manager")
    commands+=("scheduler")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_etcd_local()
{
    last_command="kubeadm_init_phase_etcd_local"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_etcd()
{
    last_command="kubeadm_init_phase_etcd"
    commands=()
    commands+=("local")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_kubeconfig_admin()
{
    last_command="kubeadm_init_phase_kubeconfig_admin"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig-dir=")
    local_nonpersistent_flags+=("--kubeconfig-dir=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_kubeconfig_all()
{
    last_command="kubeadm_init_phase_kubeconfig_all"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig-dir=")
    local_nonpersistent_flags+=("--kubeconfig-dir=")
    flags+=("--node-name=")
    local_nonpersistent_flags+=("--node-name=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_kubeconfig_controller-manager()
{
    last_command="kubeadm_init_phase_kubeconfig_controller-manager"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig-dir=")
    local_nonpersistent_flags+=("--kubeconfig-dir=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_kubeconfig_kubelet()
{
    last_command="kubeadm_init_phase_kubeconfig_kubelet"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig-dir=")
    local_nonpersistent_flags+=("--kubeconfig-dir=")
    flags+=("--node-name=")
    local_nonpersistent_flags+=("--node-name=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_kubeconfig_scheduler()
{
    last_command="kubeadm_init_phase_kubeconfig_scheduler"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig-dir=")
    local_nonpersistent_flags+=("--kubeconfig-dir=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_kubeconfig()
{
    last_command="kubeadm_init_phase_kubeconfig"
    commands=()
    commands+=("admin")
    commands+=("all")
    commands+=("controller-manager")
    commands+=("kubelet")
    commands+=("scheduler")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_kubelet-start()
{
    last_command="kubeadm_init_phase_kubelet-start"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--cri-socket=")
    local_nonpersistent_flags+=("--cri-socket=")
    flags+=("--node-name=")
    local_nonpersistent_flags+=("--node-name=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_mark-control-plane()
{
    last_command="kubeadm_init_phase_mark-control-plane"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--node-name=")
    local_nonpersistent_flags+=("--node-name=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_preflight()
{
    last_command="kubeadm_init_phase_preflight"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--ignore-preflight-errors=")
    local_nonpersistent_flags+=("--ignore-preflight-errors=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_upload-config_all()
{
    last_command="kubeadm_init_phase_upload-config_all"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_upload-config_kubeadm()
{
    last_command="kubeadm_init_phase_upload-config_kubeadm"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_upload-config_kubelet()
{
    last_command="kubeadm_init_phase_upload-config_kubelet"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase_upload-config()
{
    last_command="kubeadm_init_phase_upload-config"
    commands=()
    commands+=("all")
    commands+=("kubeadm")
    commands+=("kubelet")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init_phase()
{
    last_command="kubeadm_init_phase"
    commands=()
    commands+=("addon")
    commands+=("bootstrap-token")
    commands+=("certs")
    commands+=("control-plane")
    commands+=("etcd")
    commands+=("kubeconfig")
    commands+=("kubelet-start")
    commands+=("mark-control-plane")
    commands+=("preflight")
    commands+=("upload-config")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_init()
{
    last_command="kubeadm_init"
    commands=()
    commands+=("phase")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    local_nonpersistent_flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    local_nonpersistent_flags+=("--apiserver-bind-port=")
    flags+=("--apiserver-cert-extra-sans=")
    local_nonpersistent_flags+=("--apiserver-cert-extra-sans=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--cri-socket=")
    local_nonpersistent_flags+=("--cri-socket=")
    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--ignore-preflight-errors=")
    local_nonpersistent_flags+=("--ignore-preflight-errors=")
    flags+=("--image-repository=")
    local_nonpersistent_flags+=("--image-repository=")
    flags+=("--kubernetes-version=")
    local_nonpersistent_flags+=("--kubernetes-version=")
    flags+=("--node-name=")
    local_nonpersistent_flags+=("--node-name=")
    flags+=("--pod-network-cidr=")
    local_nonpersistent_flags+=("--pod-network-cidr=")
    flags+=("--service-cidr=")
    local_nonpersistent_flags+=("--service-cidr=")
    flags+=("--service-dns-domain=")
    local_nonpersistent_flags+=("--service-dns-domain=")
    flags+=("--skip-phases=")
    local_nonpersistent_flags+=("--skip-phases=")
    flags+=("--skip-token-print")
    local_nonpersistent_flags+=("--skip-token-print")
    flags+=("--token=")
    local_nonpersistent_flags+=("--token=")
    flags+=("--token-ttl=")
    local_nonpersistent_flags+=("--token-ttl=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_join()
{
    last_command="kubeadm_join"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--apiserver-advertise-address=")
    flags+=("--apiserver-bind-port=")
    flags+=("--config=")
    flags+=("--cri-socket=")
    flags+=("--discovery-file=")
    flags+=("--discovery-token=")
    flags+=("--discovery-token-ca-cert-hash=")
    flags+=("--discovery-token-unsafe-skip-ca-verification")
    flags+=("--experimental-control-plane")
    flags+=("--ignore-preflight-errors=")
    flags+=("--node-name=")
    flags+=("--token=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_reset()
{
    last_command="kubeadm_reset"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-dir=")
    flags+=("--cri-socket=")
    flags+=("--force")
    flags+=("-f")
    flags+=("--ignore-preflight-errors=")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_token_create()
{
    last_command="kubeadm_token_create"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--description=")
    local_nonpersistent_flags+=("--description=")
    flags+=("--groups=")
    local_nonpersistent_flags+=("--groups=")
    flags+=("--print-join-command")
    local_nonpersistent_flags+=("--print-join-command")
    flags+=("--ttl=")
    local_nonpersistent_flags+=("--ttl=")
    flags+=("--usages=")
    local_nonpersistent_flags+=("--usages=")
    flags+=("--dry-run")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_token_delete()
{
    last_command="kubeadm_token_delete"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_token_generate()
{
    last_command="kubeadm_token_generate"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_token_list()
{
    last_command="kubeadm_token_list"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_token()
{
    last_command="kubeadm_token"
    commands=()
    commands+=("create")
    commands+=("delete")
    commands+=("generate")
    commands+=("list")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_upgrade_apply()
{
    last_command="kubeadm_upgrade_apply"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--allow-experimental-upgrades")
    local_nonpersistent_flags+=("--allow-experimental-upgrades")
    flags+=("--allow-release-candidate-upgrades")
    local_nonpersistent_flags+=("--allow-release-candidate-upgrades")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--cri-socket=")
    local_nonpersistent_flags+=("--cri-socket=")
    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--etcd-upgrade")
    local_nonpersistent_flags+=("--etcd-upgrade")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--force")
    flags+=("-f")
    local_nonpersistent_flags+=("--force")
    flags+=("--ignore-preflight-errors=")
    local_nonpersistent_flags+=("--ignore-preflight-errors=")
    flags+=("--image-pull-timeout=")
    local_nonpersistent_flags+=("--image-pull-timeout=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--print-config")
    local_nonpersistent_flags+=("--print-config")
    flags+=("--yes")
    flags+=("-y")
    local_nonpersistent_flags+=("--yes")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_upgrade_diff()
{
    last_command="kubeadm_upgrade_diff"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-server-manifest=")
    local_nonpersistent_flags+=("--api-server-manifest=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--context-lines=")
    two_word_flags+=("-c")
    local_nonpersistent_flags+=("--context-lines=")
    flags+=("--controller-manager-manifest=")
    local_nonpersistent_flags+=("--controller-manager-manifest=")
    flags+=("--scheduler-manifest=")
    local_nonpersistent_flags+=("--scheduler-manifest=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_upgrade_node_config()
{
    last_command="kubeadm_upgrade_node_config"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubelet-version=")
    local_nonpersistent_flags+=("--kubelet-version=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_upgrade_node_experimental-control-plane()
{
    last_command="kubeadm_upgrade_node_experimental-control-plane"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--etcd-upgrade")
    local_nonpersistent_flags+=("--etcd-upgrade")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_upgrade_node()
{
    last_command="kubeadm_upgrade_node"
    commands=()
    commands+=("config")
    commands+=("experimental-control-plane")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_upgrade_plan()
{
    last_command="kubeadm_upgrade_plan"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--allow-experimental-upgrades")
    local_nonpersistent_flags+=("--allow-experimental-upgrades")
    flags+=("--allow-release-candidate-upgrades")
    local_nonpersistent_flags+=("--allow-release-candidate-upgrades")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--ignore-preflight-errors=")
    local_nonpersistent_flags+=("--ignore-preflight-errors=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--print-config")
    local_nonpersistent_flags+=("--print-config")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_upgrade()
{
    last_command="kubeadm_upgrade"
    commands=()
    commands+=("apply")
    commands+=("diff")
    commands+=("node")
    commands+=("plan")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_version()
{
    last_command="kubeadm_version"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--output=")
    two_word_flags+=("-o")
    local_nonpersistent_flags+=("--output=")
    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kubeadm_root_command()
{
    last_command="kubeadm"
    commands=()
    commands+=("alpha")
    commands+=("completion")
    commands+=("config")
    commands+=("init")
    commands+=("join")
    commands+=("reset")
    commands+=("token")
    commands+=("upgrade")
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--log-file=")
    flags+=("--rootfs=")
    flags+=("--skip-headers")
    flags+=("--v=")
    two_word_flags+=("-v")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

__start_kubeadm()
{
    local cur prev words cword
    declare -A flaghash 2>/dev/null || :
    if declare -F _init_completion >/dev/null 2>&1; then
        _init_completion -s || return
    else
        __kubeadm_init_completion -n "=" || return
    fi

    local c=0
    local flags=()
    local two_word_flags=()
    local local_nonpersistent_flags=()
    local flags_with_completion=()
    local flags_completion=()
    local commands=("kubeadm")
    local must_have_one_flag=()
    local must_have_one_noun=()
    local last_command
    local nouns=()

    __kubeadm_handle_word
}

if [[ $(type -t compopt) = "builtin" ]]; then
    complete -o default -F __start_kubeadm kubeadm
else
    complete -o default -o nospace -F __start_kubeadm kubeadm
fi

# ex: ts=4 sw=4 et filetype=sh

BASH_COMPLETION_EOF
}

__kubeadm_bash_source <(__kubeadm_convert_bash_to_zsh)
